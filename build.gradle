plugins {
    id 'java'
}

configurations {
    aspectConfig
}

sourceCompatibility = 1.8

group 'org.example'
version '1.0-SNAPSHOT'

compileJava.options.encoding = 'utf-8'
tasks.withType(JavaCompile) {
    options.encoding = 'utf-8'
    // Allows the adapter to accept real parameter names
    options.compilerArgs.add("-parameters")
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation 'org.aspectj:aspectjrt:1.9.7'
    testImplementation "ru.testit:testit-adapter-junit5:1.1.5"
    testImplementation "ru.testit:testit-java-commons:1.1.5"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.0"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.6.0"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.6.0"
    testImplementation "org.junit.platform:junit-platform-launcher:1.9.0"
    aspectConfig "org.aspectj:aspectjweaver:1.9.7"
}

test {
    useJUnitPlatform()
    systemProperty 'junit.jupiter.extensions.autodetection.enabled', true
    doFirst {
        def weaver = configurations.aspectConfig.find { it.name.contains("aspectjweaver") }
        jvmArgs += "-javaagent:$weaver"
    }
    // to enable command line options, specify the option that will be passed like this:
    // systemProperty '<parameter_name>', System.getProperty('<parameter_name>')
    // for example:
    // systemProperty 'tmsTestRunName', System.getProperty('tmsTestRunName')
}